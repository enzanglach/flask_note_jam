---
# Run with ansible-playbook <filename> -k
#   (make sure to add the IPs of machines you want to manage to /etc/ansible/hosts first)

- hosts: all
  vars:
    nj_connect_user: azureuser
    nj_app_user: azureuser
    nj_ms_repo: deb [arch=amd64] https://packages.microsoft.com/debian/10/prod buster main
    nj_odbc_server_name: sqlserver01pyapp.database.windows.net
    nj_odbc_database: notejamdb01
    nj_git_repo: https://github.com/enzanglach/flask_note_jam.git
    nj_git_version: master
    nj_app_dir: "/home/{{ nj_app_user }}/flask_note_jam"
  #include_vars: vmweb_vars.yml
  remote_user: "{{ nj_connect_user }}"
  become: yes
  become_user: root
  become_method: sudo

  tasks:
    - name: "{{ nj_connect_user }} authorized_keys"
      authorized_key: user={{ nj_connect_user }}
                      exclusive=no
                      key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    
    - name: Root authorized_keys
      authorized_key: user=root
                      exclusive=no
                      key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    
    - name: Install GPG package for adding apt signing key
      package:
        name: gnupg
        state: present

    - name: Add a Microsoft apt signing key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add a Microsoft repository
      apt_repository:
        repo: "{{ nj_ms_repo }}"
        state: present
        
    - name: Update and upgrade existing packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install new required packages
      package:
        name:
        - curl
        - git
        - python3-dev
        - python3-pip
        - build-essential
        - libssl-dev
        - libffi-dev
        - python3-setuptools
        - python3-venv
        - nginx
        state: latest

    - name: Install MS packages
      package:
        name:
        - msodbcsql17
        - mssql-tools
        - unixodbc-dev
      environment:
        ACCEPT_EULA: 'y'

    - name: Remove old packages
      apt:
        pkg:
        - python-minimal 
        - python2
        state: absent
        autoremove: yes

    - name: Create odbc.ini file
      template:
        src: "vmweb_odbc.ini"
        dest: "/etc/odbc.ini"
        owner: root
        group: root
        mode: '0644'

    - name: Check out the repo
      git:
        repo: "{{ nj_git_repo }}"
        dest: "{{ nj_app_dir }}"
        version: "{{ nj_git_version }}"
        update: yes
      become: yes
      become_user: "{{ nj_app_user }}"

    - name: Create python virtual environment
      shell: pip3 install virtualenv && ~/.local/bin/virtualenv venv
      args:
        chdir: "{{ nj_app_dir }}"
        creates: "{{ nj_app_dir }}/venv"
      become: yes
      become_user: "{{ nj_app_user }}"

    - name: Make a script executable
      file:
        path: "{{ nj_app_dir }}/vmsetup/vmweb_notejam_setup.sh"
        mode: '0744'

    - name: Install python packages
      shell: vmsetup/vmweb_notejam_setup.sh
      args:
        chdir: "{{ nj_app_dir }}"
      become: yes
      become_user: "{{ nj_app_user }}"

    - name: Install notejam.service
      template:
        src: vmweb_notejam.service
        dest: /etc/systemd/system/notejam.service
        owner: root
        group: root
        mode: '0644'

    - name: Create a notejam.service directory
      file:
        path: /etc/systemd/system/notejam.service.d
        state: directory
        mode: '0755'

    #- name: Install notejam settings
     # template:
      #  src: settings.conf
       # dest: /etc/systemd/system/notejam.service.d/settings.conf
        #owner: root
       # group: root
       # mode: '0644'

    - name: Force systemd to reread configs
      systemd:
        daemon_reload: yes

    - name: Enable service notejam and ensure it is not masked
      systemd:
        name: notejam
        enabled: yes
        masked: no

    - name: Make sure notejam service is running
      systemd:
        state: started
        name: notejam

    - name: Install nginx website config
      template:
        src: vmweb_notejam.nginx
        dest: /etc/nginx/sites-available/notejam.nginx
        owner: root
        group: root
        mode: '0644'
      notify:
      - restart nginx        

    - name: Create web-site link 
      file:
        src: /etc/nginx/sites-available/notejam.nginx
        dest: /etc/nginx/sites-enabled/notejam.nginx
        owner: root
        group: root
        mode: '0777'
        state: link
      notify:
      - restart nginx        

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted        
